<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.33">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.12">
      <gitLabConnection>gitlab-hook</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>gitlab_username</name>
          <description></description>
          <defaultValue>cicd</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>gitlab_private_token</name>
          <description></description>
          <defaultValue>4YYNak6i3zQqEaeTcwnN</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>cicd_portal_ui_git_repo</name>
          <description></description>
          <defaultValue>http://192.168.10.116/cicd/cicd_portal_ui.git</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>docker_registry_url</name>
          <description></description>
          <defaultValue>http://192.168.10.117:30172</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>docker_registry_username</name>
          <description></description>
          <defaultValue>cicd</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>docker_registry_password</name>
          <description></description>
          <defaultValue>cicd@12345</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>kubernetes_namespace</name>
          <description></description>
          <defaultValue>cicd-portal</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.73">
    <script>node ('ubuntu-slave'){
	slackSend (color: "#D1D1D1", message: "$JOB_NAME Pipeline build $BUILD_NUMBER Started")
	try {
		stage('Prepare Workspace'){
			sh'''
				rm -rf *
				echo "null" > statusFile
			'''
		}
		stage('Create Kubernetes Configs'){
			sh'''
				docker_registry_ip=$(echo $docker_registry_url|awk -F '/' '{print $3}')
                
				cicd_portal_ui_app_name=$(echo $cicd_portal_ui_git_repo|awk -F '/' '{print $5}'|awk -F '.' '{print $1}'| sed -e "s/_/-/g")
                gitlab_ip=$(echo $cicd_portal_ui_git_repo|awk -F '/' '{print $3}')
				gitlab_http=$(echo $cicd_portal_ui_git_repo|awk -F '/' '{print $1}')//
				gitlab_user=$(echo $cicd_portal_ui_git_repo|awk -F '/' '{print $4}')
				gitlab_repo_name=$(echo $cicd_portal_ui_git_repo|awk -F '/' '{print $5}'|awk -F '.' '{print $1}')
                git clone $gitlab_http$gitlab_username:$gitlab_private_token@$gitlab_ip/$gitlab_user/$gitlab_repo_name.git
				cd $gitlab_repo_name
                cicd_portal_ui_last_tag=$(git tag|grep '[^-aws]$'|grep '[^-oath]$'|tail -1||true)
                cd ..
                
cat <<EOF > cicd_portal_ui.yml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $(echo $cicd_portal_ui_app_name)
  namespace: cicd-portal
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: $cicd_portal_ui_app_name
  template:
    metadata:
      labels:
        app: $cicd_portal_ui_app_name
    spec:
      containers:
      - name: $(echo $cicd_portal_ui_app_name)-container
        image: "$docker_registry_ip/$cicd_portal_ui_app_name:$cicd_portal_ui_last_tag"
        ports:
        - containerPort: 5050
      imagePullSecrets: 
        - name: cicd-private-registry
---
apiVersion: v1
kind: Service
metadata:
  name: cicd-portal-ui-svc
  namespace: cicd-portal
spec:
  ports:
  - nodePort: 30050
    port: 5050
    targetPort: 5050
  selector:
    app: $cicd_portal_ui_app_name
  type: NodePort
EOF
			'''
		}
		stage('Prepare Kubernetes'){
			sh'''
				kubectl delete namespace cicd-portal||true
				kubectl create namespace cicd-portal
				kubectl create secret docker-registry cicd-private-registry --docker-server=$docker_registry_url --docker-username=$docker_registry_username --docker-password=$docker_registry_password -n cicd-portal
			'''
		}
		stage('Deploy'){
			sh'''
				kubectl apply -f cicd_portal_ui.yml
			'''
		}
	}
	catch (e) {
		System.exit(1)
		if (status.trim().equalsIgnoreCase("null")) {
			sh '''echo "Error! Ask admin for build log." > statusFile'''
		}
	}
	finally {
		status = readFile 'statusFile'
		if (status.trim().equalsIgnoreCase("null")) {
			slackSend (color: "#73B839", message: "$JOB_NAME Pipeline Successful")
		}
		else{
			slackSend (color: "#F6260D", message: status.trim())
		}
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
